(defun rgr-get-hex-digit ()
  (let ((char (char-after (point))))
    (forward-char)
    (cond ((and (<= ?0 char) (<= char ?9))
	    (- char ?0))
	  ((and (<= ?a char) (<= char ?f))
	    (+ (- char ?a) 10)))))

(defun rgr-get-hex-char ()
  (let ((char (+ (* (rgr-get-hex-digit) 16)
		 (rgr-get-hex-digit))))
    (if (and (<= ?\  char) (<= char ?\~)) char ?.)))

(defun rgr-dehex-line ()
  (interactive)
  (if (looking-at "^\t\t\t [0-9a-f]")
      (let ((chars nil))
	(goto-char (1- (match-end 0)))
	(while (looking-at "[0-9a-f][0-9a-f][0-9a-f][0-9a-f] ?")
	  (let ((end (match-end 0)))
	    (setq chars (cons (rgr-get-hex-char) chars))
	    (setq chars (cons (rgr-get-hex-char) chars))
	    (goto-char end)))
	(end-of-line)
	(insert "  " (concat (nreverse chars))))))

(defun rgr-dehex-buffer ()
  (interactive)
  (while (not (eobp))
    (rgr-dehex-line)
    (forward-line)))

